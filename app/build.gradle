apply from: '../dependencies.gradle'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        jcenter()
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.22.0'
        classpath 'com.novoda:build-properties-plugin:1.2.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.novoda.build-properties'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

buildProperties {
    application {
        file project.file('../team-props/application.properties')
    }
    secrets {
        file project.file('../team-props/secrets.properties')
    }
    releaseSigningConfig {
        file project.file('../team-props/releaseSigningConfig.properties')
    }
}

android {
    compileSdkVersion Integer.parseInt(project.COMPILE_SDK_VERSION)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId buildProperties.application['applicationId'].or('com.ls.drupalconapp').string
        minSdkVersion Integer.parseInt(project.MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.TARGET_SDK_VERSION)

        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME

        manifestPlaceholders += [
                fabricApiKey: buildProperties.secrets['fabricApiKey'].or('').string
        ]
    }

    if (System.getenv('CI') == null) {
        signingConfigs {
            config {
                signingConfigProperties buildProperties.releaseSigningConfig
            }
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.config
            }
        }
    }

    lintOptions {
        lintConfig file("$rootProject.projectDir/team-props/lint.xml")
        abortOnError false
    }
}

dependencies {
    compile libraries.app.annotations
    compile libraries.app.gson
    compile libraries.app.volley

    compile libraries.app.shadowLayout
    compile libraries.app.materialTabStrip
    compile libraries.app.parallaxScroll

    compile libraries.app.appCompat
    compile libraries.app.playAnalytics
    compile libraries.app.playMaps

    compile(libraries.app.crashlytics) {
        transitive = true
    }
    compile project(':drupalSDK')
    compile libraries.app.twitter
}

apply plugin: 'com.google.gms.google-services'
